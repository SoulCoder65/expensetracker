{"version":3,"sources":["Context/ContextReducer.jsx","Context/context.jsx","UIcomponents/Main/ExpenseList.jsx","UIcomponents/Main/Snackbar.jsx","Data/Type.jsx","Data/Categories.jsx","UIcomponents/Main/Form.jsx","UIcomponents/Main/InfoCard.jsx","UIcomponents/Main/MainCard.jsx","UIcomponents/Charts/ChartFiles/ChartTemplate.jsx","Images/bg.jpg","App.js","index.js"],"names":["ContextReducer","state","action","records","type","payload","localStorage","setItem","JSON","stringify","filter","record","id","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","data","dispatch","total","reduce","acc","currVal","values","Number","amount","reduceData","item","category","value","label","DeleteRecord","AddRecord","useStyles","makeStyles","theme","root","flexGrow","maxWidth","demo","backgroundColor","palette","background","paper","title","margin","spacing","ExpenseList","classes","React","useState","dense","useContext","className","List","map","ListItem","ListItemAvatar","Avatar","style","ListItemText","primary","secondary","date","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","Alert","props","elevation","variant","width","marginTop","SnackBar","open","setOpen","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","Type","IncomeCategories","ExpenseCategories","formCSs","display","container","flexWrap","textField","marginLeft","marginRight","Form","setValues","segment","useSpeechContext","onChange","e","prev","target","name","uuid","useEffect","intent","isFinal","entities","forEach","s","charAt","slice","toLowerCase","iC","includes","noValidate","autoComplete","TextField","select","option","MenuItem","InputLabelProps","shrink","isNaN","Button","color","fontWeight","marginBottom","isIncome","Math","round","random","InfoCard","textAlign","padding","minHeight","maxHeight","form_data","flexDirection","justifyContent","alignItems","fontSize","pos","MainCard","console","log","Card","CardContent","Divider","varient","Typography","component","words","w","join","Paper","overflow","charts","FusionCharts","CandyTheme","ReactFC","fcRoot","UmberTheme","ChartTemplate","filterData","filtered","push","dataSource","chart","caption","subCaption","plottooltext","showlegend","showpercentvalues","showPercentInToolTip","legendposition","usedataplotcolorforlabels","height","dataFormat","backgroundImage","Background","backgroundSize","main","order","breakpoints","up","income","expense","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","div","Grid","xs","md","ref","initial","x","animate","transition","delay","duration","ReactDOM","render","appId","process","language","document","getElementById"],"mappings":"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","file":"static/js/main.bbd7423d.chunk.js","sourcesContent":["const ContextReducer=(state,action)=>{\r\n    let records;\r\n    switch (action.type) {\r\n        case \"ADD_RECORD\":\r\n            records=[action.payload,...state]\r\n            localStorage.setItem('records',JSON.stringify(records))\r\n            return records\r\n        \r\n        case \"DELETE_RECORD\":\r\n            records=state.filter((record)=>record.id!=action.payload);\r\n            localStorage.setItem('records',JSON.stringify(records\r\n                ))\r\n            return records\r\n            \r\n        default:\r\n            return state    \r\n            \r\n    }\r\n    \r\n};\r\nexport default ContextReducer;","import React, { useReducer, createContext } from \"react\";\r\nimport ContextReducer from \"./ContextReducer\";\r\nconst initialState = JSON.parse(localStorage.getItem(\"records\")) || [];\r\nconst ExpenseTrackerContext = createContext(initialState);\r\n\r\nconst Provider = ({ children }) => {\r\n  const [data, dispatch] = useReducer(ContextReducer, initialState);\r\n\r\n  // Delete Method\r\n  const DeleteRecord = (id) => {\r\n    dispatch({ type: \"DELETE_RECORD\", payload: id });\r\n  };\r\n  // Add Method\r\n  const AddRecord = (record) => {\r\n    dispatch({ type: \"ADD_RECORD\", payload: record });\r\n  };\r\n  // Finding total amount\r\n  const total = data.reduce(\r\n    (acc, currVal) =>\r\n      currVal.values.type == \"Income\"\r\n        ? Number(acc) + Number(currVal.values.amount)\r\n        : Number(acc) - Number(currVal.values.amount),\r\n\r\n    0\r\n  );\r\n\r\n  // Sort data\r\n  let reduceData = data.reduce((total, item) => {\r\n    if (!item.values.category) return total;\r\n    if (!total[item.values.category]) {\r\n      total[item.values.category] = {\r\n        label: item.values.category,\r\n        value: Number(item.values.amount),\r\n      };\r\n    } else {\r\n      total[item.values.category] = {\r\n        ...total[item.values.category],\r\n        value: total[item.values.category].value + Number(item.values.amount),\r\n      };\r\n    }\r\n    return total;\r\n  }, []);\r\n\r\n  // console.log(reduceData);\r\n\r\n  return (\r\n    <>\r\n      <ExpenseTrackerContext.Provider\r\n        value={{\r\n          DeleteRecord,\r\n          AddRecord,\r\n          data,\r\n          total,\r\n          reduceData,\r\n        }}\r\n      >\r\n        {children}\r\n      </ExpenseTrackerContext.Provider>\r\n    </>\r\n  );\r\n};\r\nexport { Provider, ExpenseTrackerContext };\r\n","// Show list of all records\r\nimport React,{useContext} from \"react\"\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\r\nimport {ExpenseTrackerContext} from \"./../../Context/context\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      maxWidth: 752,\r\n    },\r\n    demo: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n      margin: theme.spacing(4, 0, 2),\r\n    },\r\n  }));\r\n  \r\n\r\nconst ExpenseList=()=>{\r\n    const classes = useStyles();\r\n    const [dense, setDense] = React.useState(false);\r\n    const{data,DeleteRecord}=useContext(ExpenseTrackerContext)\r\n  \r\n    return(<>\r\n        <div className={classes.demo}>\r\n            <List dense={dense}>\r\n              {\r\n                data.map((record)=>{\r\n                  return<>\r\n                    <ListItem>\r\n                    <ListItemAvatar>\r\n                 {record.values.type==\"Income\"?(\r\n                  <Avatar style={{backgroundColor:\"green\"}}>\r\n                  <AttachMoneyIcon/>\r\n                 </Avatar>\r\n                 ):\r\n                 <Avatar style={{backgroundColor:\"red\"}}>\r\n                  <MoneyOffIcon/>\r\n                  </Avatar>\r\n                 }\r\n                  \r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={record.values.category}\r\n                    secondary={`₹${record.values.amount}  - ${record.values.date}`}\r\n                  />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>{\r\n                      DeleteRecord(record.id)\r\n                    }}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n\r\n                </ListItem>\r\n                </>\r\n                })\r\n              }\r\n                              \r\n            </List>\r\n          </div>\r\n    </>)\r\n}\r\nexport default ExpenseList;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst SnackBar = ({ open, setOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={4000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Income Added Successfully\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnackBar;\r\n","const Type=[\r\n    {\r\n        value:\"Income\"\r\n    },\r\n    {\r\n        value:\"Expense\"\r\n    }\r\n]\r\nexport default Type","const IncomeCategories=[\r\n    {\r\n        value:\"Salary\"\r\n    },\r\n    {\r\n        value:\"Investment Return\"\r\n    },\r\n    {\r\n        value:\"Rental income\"\r\n    },\r\n    {\r\n        value:\"Saving\"\r\n    },\r\n    {\r\n        value:\"Lottery\"\r\n    },\r\n    {\r\n        value:\"Business\"\r\n    },\r\n    {\r\n        value:\"Others\"\r\n    },\r\n]\r\n\r\nconst ExpenseCategories=[\r\n    {\r\n        value:\"Grocery\"\r\n    },\r\n    {\r\n        value:\"Education\"\r\n    },\r\n    {\r\n        value:\"Parties\"\r\n    },\r\n    {\r\n        value:\"Clothes\"\r\n    },\r\n    {\r\n        value:\"Bills\"\r\n    },\r\n    {\r\n        value:\"Furniture\"\r\n    },\r\n    {\r\n        value:\"Petrol\"\r\n    },\r\n    {\r\n        value:\"Others\"\r\n    },\r\n\r\n]\r\nexport {IncomeCategories,ExpenseCategories}","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport uuid from \"react-uuid\";\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\n// Snackbar\r\nimport SnackBar from \"./Snackbar\";\r\n// Data import\r\nimport Type from \"../../Data/Type\";\r\nimport { ExpenseCategories, IncomeCategories } from \"../../Data/Categories\";\r\n// Context Data\r\nimport { ExpenseTrackerContext } from \"./../../Context/context\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  formCSs: {\r\n    display: \"flex\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  // Managing State\r\n  const [values, setValues] = useState({\r\n    type: \"\",\r\n    category: \"\",\r\n    amount: \"\",\r\n    date: \"\",\r\n  });\r\n  // Alert check\r\n  const [open, setOpen] = useState(false);\r\n  // Add record reducer\r\n  const { AddRecord } = useContext(ExpenseTrackerContext);\r\n  // Convert voice to text\r\n  const { segment } = useSpeechContext();\r\n\r\n  // Change State Function\r\n  const onChange = (e) => {\r\n    setValues((prev) => {\r\n      return {\r\n        ...prev,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n  // Form submit function\r\n  const onClick = () => {\r\n    AddRecord({ values, id: uuid() });\r\n    setOpen(true);\r\n    setValues({\r\n      type: \"\",\r\n      category: \"\",\r\n      date: \"\",\r\n      amount: \"\",\r\n    });\r\n  };\r\n\r\n  // Speechly\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setValues({ ...values, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setValues({ ...values, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return onClick();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        return setValues([]);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case \"amount\":\r\n            setValues({ ...values, amount: s.value });\r\n            break;\r\n          case \"category\":\r\n            if (IncomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setValues({ ...values, type: \"Income\", category });\r\n            } else if (\r\n              ExpenseCategories.map((iC) => iC.type).includes(category)\r\n            ) {\r\n              setValues({ ...values, type: \"Expense\", category });\r\n            }\r\n            break;\r\n          case \"date\":\r\n            setValues({ ...values, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (\r\n        segment.isFinal &&\r\n        values.amount &&\r\n        values.category &&\r\n        values.type &&\r\n        values.date\r\n      ) {\r\n        onClick();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  // Speechly End\r\n\r\n  return (\r\n    <>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <div className={classes.formCSs}>\r\n          {/* Type Field */}\r\n          <TextField\r\n            id=\"standard-select-types\"\r\n            select\r\n            name=\"type\"\r\n            value={values.type}\r\n            label=\"Type\"\r\n            onChange={onChange}\r\n          >\r\n            {Type.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.value}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n\r\n          {/* Categories Field */}\r\n          <TextField\r\n            id=\"standard-select-types\"\r\n            select\r\n            name=\"category\"\r\n            value={values.category}\r\n            label=\"Categories\"\r\n            onChange={onChange}\r\n          >\r\n            {values.type == \"Income\"\r\n              ? IncomeCategories.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.value}\r\n                  </MenuItem>\r\n                ))\r\n              : ExpenseCategories.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.value}\r\n                  </MenuItem>\r\n                ))}\r\n          </TextField>\r\n        </div>\r\n        {/* Second Row */}\r\n        <div className={classes.formCSs}>\r\n          {/* Amount */}\r\n          <TextField\r\n            label=\"Amount\"\r\n            id=\"standard-start-adornment\"\r\n            name=\"amount\"\r\n            value={values.amount}\r\n            onChange={onChange}\r\n          />\r\n          {/* Date picker */}\r\n          <TextField\r\n            id=\"date\"\r\n            label=\"Date\"\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={values.date}\r\n            onChange={onChange}\r\n            className={classes.textField}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        {values.type &&\r\n          values.amount &&\r\n          values.category &&\r\n          values.date &&\r\n          !Number.isNaN(Number(values.amount)) && (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{\r\n                width: \"90%\",\r\n                backgroundColor: \"#6f9eaf\",\r\n                color: \"black\",\r\n                fontWeight: \"bold\",\r\n                marginLeft: \"5%\",\r\n                marginTop: \"2%\",\r\n                marginBottom: \"2%\",\r\n              }}\r\n              onClick={onClick}\r\n            >\r\n              Save\r\n            </Button>\r\n          )}\r\n        <SnackBar open={open} setOpen={setOpen} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst isIncome = Math.round(Math.random());\r\n\r\nconst InfoCard = () => {\r\n  return (\r\n    <div elevation={3} style={{ textAlign: \"center\", padding: \"0 10%\" }}>\r\n      Try saying: <br />\r\n      Add {isIncome ? \"Income \" : \"Expense \"}\r\n      for {isIncome ? \"₹100 \" : \"₹50 \"}\r\n      in Category {isIncome ? \"Salary \" : \"Travel \"}\r\n      for {isIncome ? \"Monday \" : \"Thursday \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCard;\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport \"../../UIcomponents/ui.css\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\n\r\n// Rest Components\r\nimport Form from \"./Form\";\r\nimport InfoCard from \"./InfoCard\";\r\n// Context Data\r\nimport { ExpenseTrackerContext } from \"./../../Context/context\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 440,\r\n    minHeight: 400,\r\n    maxHeight: 500,\r\n    margin: \"auto\",\r\n    padding: 0,\r\n\r\n    // backgroundColor:\"wheat\"\r\n  },\r\n  form_data: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nconst MainCard = () => {\r\n  const { total } = useContext(ExpenseTrackerContext);\r\n  const { segment } = useSpeechContext();\r\n  console.log(segment);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent style={{ padding: \"0px\" }}>\r\n        <div className=\"clip_path\">\r\n          <span>Expense Tracker</span>\r\n        </div>\r\n\r\n        <h3 style={{ textAlign: \"center\" }}>Total Balance: ₹{total}</h3>\r\n        <Divider varient=\"fullWidth\" />\r\n\r\n        <div className={classes.form_data}>\r\n          <Typography\r\n            variant=\"body2\"\r\n            component=\"p\"\r\n            style={{ marginBottom: \"4%\" }}\r\n          >\r\n            <InfoCard />\r\n            <br />\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {segment ? (\r\n              <div\r\n                elevation={3}\r\n                style={{ textAlign: \"center\", padding: \"0 10%\" }}\r\n              >\r\n                {segment.words.map((w) => w.value).join(\" \")}\r\n              </div>\r\n            ) : null}\r\n            <br />\r\n          </Typography>\r\n        </div>\r\n        <Form />\r\n      </CardContent>\r\n      <Paper style={{ maxHeight: 200, overflow: \"auto\" }}>\r\n        <ExpenseList />\r\n      </Paper>\r\n    </Card>\r\n  );\r\n};\r\nexport default MainCard;\r\n","import React, { useContext } from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport { ExpenseTrackerContext } from \"../../../Context/context\";\r\nimport CandyTheme from \"fusioncharts/themes/fusioncharts.theme.candy\";\r\nimport UmberTheme from \"fusioncharts/themes/fusioncharts.theme.umber\";\r\nimport ReactFC from \"react-fusioncharts\";\r\n\r\n// Resolves charts dependancy\r\ncharts(FusionCharts, CandyTheme);\r\nReactFC.fcRoot(FusionCharts, CandyTheme, UmberTheme);\r\n\r\n// finding total of categories\r\nvar total = 0;\r\nconst ChartTemplate = ({ category, title }) => {\r\n  const { reduceData } = useContext(ExpenseTrackerContext);\r\n  let filterData = category.reduce((filtered, data) => {\r\n    if (reduceData[data.value]) {\r\n      filtered.push(reduceData[data.value]);\r\n    }\r\n    return filtered;\r\n  }, []);\r\n  filterData.map((data) => {\r\n    total += Number(data.value);\r\n  });\r\n  console.log(total);\r\n  // Chart data\r\n  const dataSource = {\r\n    chart: {\r\n      caption: title,\r\n      subCaption: `₹${total}`,\r\n      plottooltext: \"<b>$percentValue</b>  $label \",\r\n      showlegend: \"1\",\r\n      showpercentvalues: \"0\",\r\n      showPercentInToolTip: \"0\",\r\n      legendposition: \"top\",\r\n      usedataplotcolorforlabels: \"1\",\r\n      theme: \"candy\",\r\n    },\r\n    data: filterData,\r\n  };\r\n\r\n  return (\r\n    <ReactFusioncharts\r\n      type=\"pie2d\"\r\n      width=\"100%\"\r\n      height=\"60%\"\r\n      dataFormat=\"JSON\"\r\n      dataSource={dataSource}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChartTemplate;\r\n","export default __webpack_public_path__ + \"static/media/bg.f943867b.jpg\";","import React, { useEffect, useRef } from \"react\";\nimport MainCard from \"./UIcomponents/Main/MainCard\";\nimport ChartTemplate from \"./UIcomponents/Charts/ChartFiles/ChartTemplate\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IncomeCategories, ExpenseCategories } from \"./Data/Categories\";\nimport Background from \"./Images/bg.jpg\";\nimport { useSpeechContext, SpeechState } from \"@speechly/react-client\";\nimport {\n  PushToTalkButton,\n  PushToTalkButtonContainer,\n  ErrorPanel,\n} from \"@speechly/react-ui\";\nimport \"./App.css\";\n\n// Framer motion\nimport { motion } from \"framer-motion\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundImage: `url(${Background})`,\n    backgroundSize: \"cover\",\n  },\n  // Changing order of\n  main: {\n    order: 1,\n    width: 100,\n    [theme.breakpoints.up(\"sm\")]: {\n      order: 2,\n    },\n  },\n  income: {\n    order: 2,\n    [theme.breakpoints.up(\"sm\")]: {\n      order: 2,\n    },\n  },\n  expense: {\n    order: 3,\n    [theme.breakpoints.up(\"sm\")]: {\n      order: 3,\n    },\n  },\n}));\nconst App = () => {\n  const { speechState } = useSpeechContext();\n  //To scroll to top on speaking\n  const main = useRef(null);\n  const executeScroll = () => main.current.scrollIntoView();\n  useEffect(() => {\n    if (speechState === SpeechState.Recording) {\n      executeScroll();\n    }\n  }, [speechState]);\n\n  const classes = useStyles();\n  return (\n    <>\n      <motion.div\n        className={classes.root}\n        style={{ backgroundImage: { Background } }}\n      >\n        <Grid container spacing={3} style={{ height: \"100%\" }}>\n          {/* Income tracker */}\n          <Grid\n            item\n            xs={12}\n            md={3}\n            style={{ margin: \"auto\" }}\n            className={classes.income}\n          >\n            <ChartTemplate\n              category={IncomeCategories}\n              title=\"Income Track\"\n              theme=\"umber\"\n            />\n          </Grid>\n          {/* Income tracker End*/}\n          {/* Main  */}\n          <Grid ref={main} item xs={12} md={4} className={classes.main}>\n            <motion.div\n              initial={{ x: -1000 }}\n              animate={{ x: 0 }}\n              transition={{ delay: 0.1, duration: \"1.5\", type: \"spring\" }}\n            >\n              <MainCard />\n            </motion.div>\n          </Grid>\n          {/* Main End */}\n          {/* Expense Tracker */}\n          <Grid\n            item\n            xs={12}\n            md={3}\n            style={{ margin: \"auto\" }}\n            className={classes.expense}\n          >\n            <ChartTemplate category={ExpenseCategories} title=\"Expense Track\" />\n          </Grid>\n          {/* Expense Tracker End */}\n         \n        </Grid>\n        {/* Speak Button */}\n        <PushToTalkButtonContainer style={{ marginTop: \"12px\" }}>\n          <PushToTalkButton />\n          <ErrorPanel />\n        </PushToTalkButtonContainer>\n      </motion.div>\n    </>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"./Context/context\"\nimport { SpeechProvider} from \"@speechly/react-client\";\n\nconst speechlyID=process.env.REACT_APP_SPEECHLY_API\n\nReactDOM.render(\n  <SpeechProvider appId={speechlyID} language=\"en-US\">\n      <Provider>\n    <App />\n    </Provider>\n    </SpeechProvider>\n\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}